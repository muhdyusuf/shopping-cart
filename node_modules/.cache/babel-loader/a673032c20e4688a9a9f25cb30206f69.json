{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yusuf\\\\react-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Header from \"./component/Header\";\nimport Itemlist from \"./component/Itemlist\";\nimport Total from \"./component/Total\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [itemList, updateItem] = useState([]);\n  const itemNameVal = useRef();\n  const itemPriceVal = useRef();\n  const LOCAL_STORAGE_KEY = \"APA.APA\";\n  useEffect(() => {\n    const storedList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedList) updateItem(storedList);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(itemList));\n  }, [itemList]);\n\n  function removeItem(id) {\n    let newItemList = [...itemList];\n    newItemList = newItemList.filter(item => item.id !== id);\n    updateItem(newItemList);\n  }\n\n  function addList(e) {\n    const itemName = itemNameVal.current.value;\n    const itemPrice = parseFloat(itemPriceVal.current.value);\n    if (!itemName || !itemPrice) return;\n    updateItem(prevItem => {\n      return [...prevItem, {\n        id: itemName,\n        name: itemName,\n        price: itemPrice,\n        quantity: 1,\n        isRemoved: false\n      }];\n    });\n    itemNameVal.current.value = null;\n    itemPriceVal.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Itemlist, {\n      itemList: itemList,\n      removeItem: removeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      total: itemList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter item Name\",\n      ref: itemNameVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Price\",\n      ref: itemPriceVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addList,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"s6/NX+OIpvKgbO+8M0ypW1+vM/k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/yusuf/react-task-tracker/src/App.js"],"names":["React","useState","useRef","useEffect","Header","Itemlist","Total","App","itemList","updateItem","itemNameVal","itemPriceVal","LOCAL_STORAGE_KEY","storedList","JSON","parse","localStorage","getItem","setItem","stringify","removeItem","id","newItemList","filter","item","addList","e","itemName","current","value","itemPrice","parseFloat","prevItem","name","price","quantity","isRemoved"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,MAAzB,EAAgCC,SAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAUC,UAAV,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMS,WAAW,GAACR,MAAM,EAAxB;AACA,QAAMS,YAAY,GAACT,MAAM,EAAzB;AAEA,QAAMU,iBAAiB,GAAC,SAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMU,UAAU,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,iBAArB,CAAX,CAAjB;AACA,QAAGC,UAAH,EAAeJ,UAAU,CAACI,UAAD,CAAV;AAChB,GAHQ,EAGP,EAHO,CAAT;AAKAV,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,YAAY,CAACE,OAAb,CAAqBN,iBAArB,EAAuCE,IAAI,CAACK,SAAL,CAAeX,QAAf,CAAvC;AACD,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;;AAMA,WAASY,UAAT,CAAoBC,EAApB,EAAuB;AACrB,QAAIC,WAAW,GAAC,CAAC,GAAGd,QAAJ,CAAhB;AACAc,IAAAA,WAAW,GAACA,WAAW,CAACC,MAAZ,CAAmBC,IAAI,IAAGA,IAAI,CAACH,EAAL,KAAYA,EAAtC,CAAZ;AACAZ,IAAAA,UAAU,CAACa,WAAD,CAAV;AAGD;;AAED,WAASG,OAAT,CAAiBC,CAAjB,EAAmB;AAKjB,UAAMC,QAAQ,GAACjB,WAAW,CAACkB,OAAZ,CAAoBC,KAAnC;AACA,UAAMC,SAAS,GAAEC,UAAU,CAACpB,YAAY,CAACiB,OAAb,CAAqBC,KAAtB,CAA3B;AAGA,QAAI,CAACF,QAAD,IAAa,CAACG,SAAlB,EAA6B;AAE7BrB,IAAAA,UAAU,CAACuB,QAAQ,IAAE;AACnB,aAAO,CAAC,GAAGA,QAAJ,EACL;AAACX,QAAAA,EAAE,EAACM,QAAJ;AAAaM,QAAAA,IAAI,EAACN,QAAlB;AAA2BO,QAAAA,KAAK,EAACJ,SAAjC;AAA2CK,QAAAA,QAAQ,EAAC,CAApD;AAAsDC,QAAAA,SAAS,EAAC;AAAhE,OADK,CAAP;AAED,KAHS,CAAV;AAKA1B,IAAAA,WAAW,CAACkB,OAAZ,CAAoBC,KAApB,GAA0B,IAA1B;AACAlB,IAAAA,YAAY,CAACiB,OAAb,CAAqBC,KAArB,GAA2B,IAA3B;AACD;;AAMD,sBAEE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAErB,QAApB;AAA8B,MAAA,UAAU,EAAEY;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEZ;AAAd;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,iBAA/B;AAAgD,MAAA,GAAG,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,aAA/B;AAA6C,MAAA,GAAG,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,OAAO,EAAEc,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBAFF;AAeD;;GAjEQlB,G;;KAAAA,G;AAoET,eAAeA,GAAf","sourcesContent":["import React, { useState,useRef,useEffect} from \"react\";\nimport Header from \"./component/Header\";\nimport Itemlist from \"./component/Itemlist\";\nimport Total from \"./component/Total\";\n\n\n\n\nfunction App() {\n  const [itemList,updateItem]=useState([])\n  const itemNameVal=useRef()\n  const itemPriceVal=useRef()\n\n  const LOCAL_STORAGE_KEY=\"APA.APA\"\n\n  useEffect(()=>{\n    const storedList=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storedList) updateItem(storedList)\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(itemList))\n  },[itemList])\n\n\n\n  function removeItem(id){\n    let newItemList=[...itemList]\n    newItemList=newItemList.filter(item=> item.id !== id)\n    updateItem(newItemList)\n\n\n  }\n\n  function addList(e){\n\n   \n\n  \n    const itemName=itemNameVal.current.value\n    const itemPrice= parseFloat(itemPriceVal.current.value)\n   \n\n    if( !itemName || !itemPrice) return\n\n    updateItem(prevItem=>{\n      return [...prevItem,\n        {id:itemName,name:itemName,price:itemPrice,quantity:1,isRemoved:false}]\n    })\n    \n    itemNameVal.current.value=null\n    itemPriceVal.current.value=null\n  }\n  \n \n\n\n\n  return (\n\n    <>\n      <Header/>\n      \n\n      <Itemlist itemList={itemList} removeItem={removeItem}/>\n      <Total total={itemList} />\n      <input type=\"text\" placeholder=\"Enter item Name\"ref={itemNameVal}/>\n      <input type=\"text\" placeholder=\"Enter Price\" ref={itemPriceVal}/>\n      <button onClick={addList}>Add</button>\n\n    \n    </>\n  );\n}\n\n\nexport default App ;\n"]},"metadata":{},"sourceType":"module"}